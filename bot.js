import TelegramBot from 'node-telegram-bot-api'
import axios from 'axios'
import 'dotenv/config'
import express from 'express'

const TOKEN = process.env.API_TOKEN
if (!TOKEN) {
  console.error("‚ùå –ù–µ—Ç API_TOKEN, –¥–æ–±–∞–≤—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
  process.exit(1)
}

// –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞
const bot = new TelegramBot(TOKEN, { polling: true })
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')

// Inline-–ø–æ–∏—Å–∫ –ø–æ –í–∏–∫–∏–ø–µ–¥–∏–∏
bot.on('inline_query', async (inlineQuery) => {
  const query = inlineQuery.query.trim()
  if (!query) return

  try {
    const url = `https://ru.wikipedia.org/api/rest_v1/page/summary/${encodeURIComponent(query)}`
    const res = await axios.get(url)
    const data = res.data

    if (!data.extract) return

    const snippet = data.extract.split('\n').slice(0, 2).join('\n\n')

    const results = [
      {
        type: 'article',
        id: String(Date.now()),
        title: data.title,
        input_message_content: { message_text: snippet },
        description: snippet.slice(0, 100) + '...',
      },
    ]

    bot.answerInlineQuery(inlineQuery.id, results, { cache_time: 0 })
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", err.message)
  }
})

// Express-—Å–µ—Ä–≤–µ—Ä (Render —Ç—Ä–µ–±—É–µ—Ç –ø–æ—Ä—Ç!)
const app = express()
const PORT = process.env.PORT || 3000

app.get('/', (req, res) => {
  res.send('‚úÖ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Render!')
})

app.listen(PORT, () => {
  console.log(`üåê Web service –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
})

setInterval(() => {
  console.log('‚è∞ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤—Å—ë –æ–∫!')
}, 10_000)